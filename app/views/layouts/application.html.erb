<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "It Platform Rating" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

    <%= javascript_include_tag "application", "data-turbo-track": "reload", defer: true %>
    <%# Includes all stylesheet files in app/assets/stylesheets %>
    <%= stylesheet_link_tag :app, "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
    
  </head>

  <body class="d-flex flex-column min-vh-100">
  <header style="padding: 1rem; background: #f2f2f2; border-bottom: 1px solid #ccc; position: relative;">
    <% if user_signed_in? %>
      <div class="d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center">
          <img src="https://s3.twcstorage.ru/0081d6e6-a535d379-eda0-4ccb-9848-d6979852b303/icon_header.png"
              alt="Logo"
              width="32"
              height="32"
              class="me-2" />
          <span class="mx-2"><%= t('app.header.label') %>, <%= current_user.full_name %>!</span>
        </div>

        <div>
          <%= button_to t('devise.sessions.btn_exit'), destroy_user_session_path, method: :delete, class: 'btn btn-outline-danger' %>
        </div>
      </div>

    <% end %>
  </header>

  <main class="flex-grow-1">
    <%= yield %>
  </main>

  <footer style="padding: 1rem; background: #f2f2f2; border-top: 1px solid #ccc; position: relative;" class="mt-auto">
    <div class="d-flex justify-content-between align-items-center">
      <span class="text-muted">&copy; <%= Time.current.year %> IT Platform Rating</span>
      <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);" class="d-flex align-items-center">
        <%= link_to url_for(locale: :ru), class: "d-flex align-items-center me-3 #{'fw-bold text-primary' if I18n.locale == :ru}" do %>
          <img
            src="https://flagcdn.com/24x18/ru.png"
            srcset="https://flagcdn.com/48x36/ru.png 2x,
              https://flagcdn.com/72x54/ru.png 3x"
            width="24"
            height="18"
            alt="Russia"> 
          <span class="mx-1">Русский</span>
        <% end %>

        <%= link_to url_for(locale: :en), class: "d-flex align-items-center #{'fw-bold text-primary' if I18n.locale == :en}" do %>
          <span class="mx-1">English</span> 
          <img
            src="https://flagcdn.com/24x18/gb.png"
            srcset="https://flagcdn.com/48x36/gb.png 2x,
              https://flagcdn.com/72x54/gb.png 3x"
            width="24"
            height="18"
            alt="United Kingdom">
        <% end %>
      </div>
    </div>
  </footer>

  <script type="module">
    import { Turbo } from "@hotwired/turbo-rails";

    document.addEventListener("turbo:load", function () {
      const form = document.querySelector("#ratings-form");
      if (!form) return;

      form.addEventListener("submit", function (e) {
        e.preventDefault();

        const formData = new FormData(form);

        fetch(form.action, {
          method: "POST",
          body: new URLSearchParams(new FormData(form)),
          headers: {
            "Accept": "application/json",
            "Content-Type": "application/x-www-form-urlencoded",
          },
        })
          .then((response) => {
            if (!response.ok) throw new Error("Ошибка сети");
            return response.json(); // парсим JSON-ответ
          })
          .then((data) => {
            if (data.averages) {
              data.averages.forEach((avg) => {
                const badge = document.querySelector(`#question-${avg.question_id} .average-badge`);
                if (badge) {
                  badge.className = `badge ${avg.color} mt-1 average-badge`;
                  badge.textContent = `Средняя оценка: ${avg.average}`;
                }
              });
            }

            const alert = document.querySelector("#rating-success");
            if (alert) {
              alert.classList.remove("d-none");
              alert.style.display = "block";
              setTimeout(() => (alert.style.display = "none"), 5000);
            }
          })
          .catch(() => alert("Произошла ошибка при сохранении оценок."));
      });
    });
  </script>

  </body>
</html>
